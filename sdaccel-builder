#!/bin/bash

set -e
set -o pipefail

export DIR
DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

export ROOT_DIR="$PWD"

function parse_yaml {
    set +x
    local prefix=$2
    local s='[[:space:]]*' w='[a-zA-Z0-9_]*' fs=$(echo @|tr @ '\034')
    sed -ne "s|^\($s\):|\1|" \
        -e "s|^\($s\)\($w\)$s:$s[\"']\(.*\)[\"']$s\$|\1$fs\2$fs\3|p" \
        -e "s|^\($s\)\($w\)$s:$s\(.*\)$s\$|\1$fs\2$fs\3|p"  $1 |
        awk -F$fs '{
      indent = length($1)/2;
      vname[indent] = $2;
      for (i in vname) {if (i > indent) {delete vname[i]}}
      if (length($3) > 0) {
         vn=""; for (i=0; i<indent; i++) {vn=(vn)(vname[i])("_")}
         printf("%s%s%s=\"%s\"\n", "'$prefix'",vn, $2, $3);
      }
   }'
   set -x
}

parse_yaml "$PWD/reco.yml" "reco"

function build {
    make -f "$DIR/sdaccel-builder.mk" TARGET=hw_emu OPTIMIZE="$reco_optimize" kernel
}

function image {
    make -f "$DIR/sdaccel-builder.mk" TARGET=hw OPTIMIZE="$reco_optimize" kernel
}

function test_go {
    make -f "$DIR/sdaccel-builder.mk" verilog
}

function simulate {
    CMD="$1"
    make -f "$DIR/sdaccel-builder.mk" TARGET=hw_emu OPTIMIZE="$reco_optimize" sim cmds kernel
    export PATH="$PWD/.reco-work/sdaccel/dist/":$PATH

    # shellcheck source=/dev/null
    source /opt/Xilinx/SDx/2016.3/settings64.sh
    XCL_EMULATION_MODE=hw_emu XCL_BINDIR="$PWD/.reco-work/sdaccel/dist/xclbin" "$CMD" "${@:2}"
}

function cmds {
    make -f "$DIR/sdaccel-builder.mk" cmds
}

function clean {
    make -f "$DIR/sdaccel-builder.mk" clean
}

function main {
    case "$1" in
        "build")
            build "${@:2}"
            ;;
        "simulate")
            simulate "${@:2}"
            ;;
        "image")
            image "${@:2}"
            ;;
        "cmds")
            cmds "${@:2}"
            ;;
        "test-go")
            test_go "${@:2}"
            ;;
        "clean")
            clean "${@:2}"
            ;;
        *)
            echo "unrecognized command: $1";
            exit 1
            ;;
        esac
}

main "$@"
